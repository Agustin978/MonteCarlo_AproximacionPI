# Aproximacion a œÄ usando Monte Carlo y MPI
## Descripci√≥n
Este proyecto implementa un programa en C para calcular una aproximaci√≥n de ùúã utilizando el m√©todo de Monte Carlo con paralelizaci√≥n mediante MPI (Message Passing Interface). El m√©todo distribuye el c√°lculo entre varios procesos, lo que permite aprovechar m√∫ltiples n√∫cleos de una CPU para mejorar la eficiencia.

El algoritmo genera puntos aleatorios dentro de un cuadrado de lado 2 y eval√∫a cu√°ntos caen dentro de un c√≠rculo inscrito en este cuadrado. La relaci√≥n entre los puntos dentro del c√≠rculo y el total de puntos se utiliza para aproximar ùúã.

---
## Caracter√≠sticas
1. **Paralelizaci√≥n:**
    Utiliza la librer√≠a MPI para distribuir los c√°lculos entre diferentes procesos.
2. **Calibraci√≥n adaptable:**
    Permite configurar la cantidad de puntos y procesos a utilizar para la aproximaci√≥n. 
3. **Medici√≥n de rendimiento:**
    Calcula el tiempo de ejecuci√≥n y el error relativo respecto al valor te√≥rico de ùúã.
4. **Escalabilidad:**
    Es compatible con cualquier n√∫mero de procesos, adapt√°ndose autom√°ticamente a la cantidad de iteraciones asignadas a cada proceso.
---
## Ejemplo de resultado

*Con ùëÅ=10‚Åµ puntos y 4 procesos:*
```
Valor aproximado de PI: 3.142192000000000
Tiempo de ejecuci√≥n: 0.0042 segundos
Error relativo: 0.019078 %
```
---
## Requisitos
* **Entorno MPI**
    * Open MPI o MPICH instalado en tu sistema.
* **Compilador C**
    *  mpicc para compilar el c√≥digo con soporte para MPI.
* **Sistema operativo**
    * Compatible con Linux 

--- 
## C√≥mo Compilar y Ejecutar
1. **Compilaci√≥n:**
    Utiliza el siguiente comando para compilar el programa:
    ```
    mpicc -o montecarlo_pi MonteCarlo_AproximacionPI.c -lm
    ```
    Donde `MonteCarlo_AproximacionPI.c` es el archivo fuente. Y `-lm` incluye la biblioteca matem√°tica para funciones como `fabs` y constantes como `M_PI`
2. **Ejecuci√≥n:**
    Ejecuta el programa usando `mpirun` con el n√∫mero de procesos deseado:
    ```
    mpirun -np <num_procesos> ./montecarlo_pi
    Ej: mpirun -np 4 ./montecarlo_pi
    ```
3. **Par√°metros Configurables:**
    * Modifica el valor de la variable `total_iteraciones` en el archivo fuente para cambiar el numero total de puntos aleatorios generados.
    * Cambia el n√∫mero de procesos al ejecutar para observar el efecto en el tiempo de ejecuci√≥n y la aproximaci√≥n de ùúã. Esto se hace desde el comando para ejecutar el codigo. 
